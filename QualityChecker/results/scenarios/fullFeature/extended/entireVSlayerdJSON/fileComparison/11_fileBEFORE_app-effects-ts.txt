// FROM: E:/aspects/cyclomaticComplexityAnalysisStudy/ProductLineHierarchic/src/app/effects/app-effects-ts
import { Injectable } from "@angular/core";
import { Actions, ROOT_EFFECTS_INIT, ofType, createEffect } from "@ngrx/effects";
import { loadPuzzles } from "../store/puzzles/puzzles.actions";
import { map } from "rxjs/operators";
import { PuzzleMock } from "../mockups/puzzle.mock";
import { DecoratorTypesService } from "../featureManagement/decoratorsVariationPointManagement/decorator-types.service";
if ({ "layerAND2": { "mainNavigation": "true", "mainPage": "true" } }.layerAND2 && ({ "layerAND3": { "puzzleAlgorithmType": "['JIGSAW', 'ANTI-JIGSAW', 'JIGSAW2']", "puzzleNavigation": "true" } }.layerAND3 && { "layerOR4": { "imageGallery": "true", "puzzleNavigation": "true", "imageLoader": "true" } }
    .
        layerOR4 && ({ "layerAND4": { "preview": "true", "randomAngleRotation": "true", "puzzleDrawer": "true", "changePuzzleOrdering": "true", "multiplePuzzleSelect": "true", "moveableOnPuzzleBoard": "true" } }.layerAND4 && ({ "layerOR5": { "rotate": "true", "boarderPicture": "true", "returnItem": "true", "showPositionOnBoard": "true" } }.layerOR5 || ({ "layerAND6": { "zoom": "true" } }.layerAND6 && { "layerOR7": { "zoomValue": "true", "toFront": "true", "zoomCoordinates": "true", "boarderPicture": "true", "reset": "true", "toBack": "true" } }.layerOR7))))) {
    class AppEffects {
        constructor(actions$: Actions) { }
        init$ = createEffect(() => this.actions$.pipe(ofType(ROOT_EFFECTS_INIT), map(_ => loadPuzzles({ puzzles: PuzzleMock }))));
    }
}
