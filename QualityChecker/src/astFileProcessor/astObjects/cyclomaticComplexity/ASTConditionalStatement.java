package astFileProcessor.astObjects.cyclomaticComplexity;

public class ASTConditionalStatement {

	public String getAstConditionalExpressionStatement(String innerConfigurationExpressionAst, String expressionName, String thenStatementAst) {
		String conditionalStatementInAst = String.join( "{",
		  "\"pos\": 168,",
		  "\"end\": 747,",
		  "\"flags\": 0,",
		  "\"modifierFlagsCache\": 0,",
		  "\"transformFlags\": 33555489,",
		  "\"kind\": 242,",
		  "\"expression\": {",
		  "    \"pos\": 211,",
		  "    \"end\": 248,",
		  "    \"flags\": 0,",
		  "    \"modifierFlagsCache\": 0,",
		  "    \"transformFlags\": 0,",
		  "    \"kind\": 208,",
		  "    \"expression\": {",
		  "        \"pos\": 211,",
		  "        \"end\": 233,",
		  "        \"flags\": 0,",
		  "        \"modifierFlagsCache\": 0,",
		  "        \"transformFlags\": 0,",
		  "        \"kind\": 207,",
		  "        \"properties\": [",
		  "            {",
		  "                \"pos\": 212,",
		  "                \"end\": 232,",
		  "                \"flags\": 0,",
		  "                \"modifierFlagsCache\": 0,",
		  "                \"transformFlags\": 0,",
		  "                \"kind\": 299,",
		  "                \"name\": {",
		  "                    \"pos\": 212,",
		  "                    \"end\": 228,",
		  "                    \"flags\": 0,",
		  "                    \"modifierFlagsCache\": 0,",
		  "                    \"transformFlags\": 0,",
		  "                    \"kind\": 10,",
		  "                    \"text\": \"" + expressionName + "\",",
		  "                    \"hasExtendedUnicodeEscape\": false",
		  "                },",
		  "                \"initializer\": {",
		  "                    \"pos\": 229,",
		  "                    \"end\": 232,",
		  "                    \"flags\": 0,",
		  "                    \"modifierFlagsCache\": 0,",
		  "                    \"transformFlags\": 0,",
		  "                    \"kind\": 207,",
		  "                    \"properties\": [" + innerConfigurationExpressionAst + "],",
		  "                    \"multiLine\": false",
		  "                }",
		  "            }",
		  "        ],",
		  "        \"multiLine\": false",
		  "    },",
		  "    \"name\": {",
		  "        \"pos\": 234,",
		  "        \"end\": 248,",
		  "        \"flags\": 0,",
		  "        \"modifierFlagsCache\": 0,",
		  "        \"transformFlags\": 0,",
		  "        \"kind\": 79,",
		  "        \"escapedText\": \"" + expressionName + "\"",
		  "    }",
		  "},",
		  "\"thenStatement\": {",
		  "    \"pos\": 249,",
		  "    \"end\": 747,",
		  "    \"flags\": 0,",
		  "    \"modifierFlagsCache\": 0,",
		  "    \"transformFlags\": 33555489,",
		  "    \"kind\": 238,",
		  "    \"statements\": [" + thenStatementAst + "]",
		  "}",
		"}");
		return conditionalStatementInAst;
	}
}
