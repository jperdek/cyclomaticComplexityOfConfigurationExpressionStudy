// FROM: E:/aspects/cyclomaticComplexityAnalysisStudy/ProductLineHierarchic/src/app/store/puzzles/puzzles-actions-ts
import { createAction, props } from "@ngrx/store";
import { Puzzle } from "./puzzles";
import { DecoratorTypesService } from "src/app/featureManagement/decoratorsVariationPointManagement/decorator-types.service";
const loadPuzzles = createAction("[Puzzles] Load Puzzles", props<{
    puzzles: Puzzle[];
}>());
const addPuzzle = createAction("[Puzzle] Add Puzzles", props<{
    puzzle: Puzzle;
}>());
const returnPuzzle = createAction("[Puzzles] Return Puzzles", props<{
    id: string;
}>());
const returnGivenPuzzles = createAction("[Puzzles] ReturnMany Puzzles", props<{
    ids: string[];
}>());
const returnPuzzles = createAction("[Puzzles] ReturnAll Puzzles");
const addPuzzles = createAction("[Puzzles] AddMany Puzzles", props<{
    puzzles: Puzzle[];
}>());
if ({ "mainNavigation": "true", "mainPage": "true" } &&
    ({ "puzzleAlgorithmType": "['JIGSAW', 'ANTI-JIGSAW', 'JIGSAW2']", "puzzleNavigation": "true" } && { "imageGallery": "true", "puzzleNavigation": "true", "imageLoader": "true"
    }
        && ({ "preview": "true", "randomAngleRotation": "true", "puzzleDrawer": "true", "changePuzzleOrdering": "true", "multiplePuzzleSelect": "true", "moveableOnPuzzleBoard": "true" } && ({ "rotate": "true", "boarderPicture": "true", "returnItem": "true", "showPositionOnBoard": "true" } || ({ "zoom": "true" } && {
            "zoomValue": "true", "toFront": "true", "zoomCoordinates": "true", "boarderPicture": "true", "reset": "true", "toBack": "true" }))))) {
    class DecoratorFileCopy {
    }
}
