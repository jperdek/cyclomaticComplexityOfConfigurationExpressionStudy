// FROM: E:/aspects/cyclomaticComplexityAnalysisStudy/ProductLineHierarchic/src/app/store/index-ts
import { ActionReducerMap } from "@ngrx/store";
import * as puzzleState from "./puzzles/puzzles.reducer";
import { DecoratorTypesService } from "../featureManagement/decoratorsVariationPointManagement/decorator-types.service";
interface PuzzleAppState {
    [puzzleState.puzzlesFeatureKey]: puzzleState.PuzzleToSelectState;
}
const reducers: ActionReducerMap<PuzzleAppState> = {
    [puzzleState.puzzlesFeatureKey]: puzzleState.reducer
};
if ("mainNavigation" == true && "mainPage" == true && (["JIGSAW", "ANTI-JIGSAW", "JIGSAW2"].indexOf(puzzleAlgorithmType) > -1 && "puzzleNavigation" == true && ("imageGallery" == true || "puzzleNavigation" == true || "imageLoader" == true) && ("preview" == true
    && "randomAngleRotation" == true && "puzzleDrawer" == true && ("rotate" ==
    true || "boarderPicture" == true || (("zoomValue" == true || "toFront" == true || "zoomCoordinates" == true || "boarderPicture" == true || "reset" == true || "toBack" == true) && "zoom" == true) || "returnItem" == true || "showPositionOnBoard" == true) && "changePuzzleOrdering" == true && "multiplePuzzleSelect" == true && "moveableOnPuzzleBoard" == true))) {
    class DecoratorFileCopy {
    }
}
const puzzleListForSelect = (state: PuzzleAppState): puzzleState.PuzzleToSelectState => state[puzzleState.puzzlesFeatureKey];
