// FROM: E:/aspects/cyclomaticComplexityAnalysisStudy/ProductLineHierarchic/src/app/puzzle-builder/pages/puzzle-board/puzzle-board-component-ts
import { AfterViewInit, Component, ElementRef, ViewChild } from "@angular/core";
import { DecoratorTypesService } from "src/app/featureManagement/decoratorsVariationPointManagement/decorator-types.service";
import { PuzzleManagerService } from "src/app/services/puzzleGenerator/puzzle-manager.service";
if ("mainNavigation" == true && "mainPage" == true && (["JIGSAW", "ANTI-JIGSAW", "JIGSAW2"].indexOf(puzzleAlgorithmType) > -1 && "puzzleNavigation" == true && ("imageGallery" == true || "puzzleNavigation"
    == true || "imageLoader" == true) && ("preview" == true && "randomAngleRotation" == true && "puzzleDrawer" == true && ("rotate" == true || "boarderPicture" == true || (("zoomValue" == true ||
    "toFront" == true || "zoomCoordinates" == true ||
    "boarderPicture" == true || "reset" == true || "toBack" == true) && "zoom" == true) || "returnItem" == true || "showPositionOnBoard" == true) && "changePuzzleOrdering" == true && "multiplePuzzleSelect" == true && "moveableOnPuzzleBoard" == true))) {
    class PuzzleBoardComponent implements AfterViewInit {
        constructor(puzzleManager: PuzzleManagerService) { }
        @ViewChild("puzzleBoard")
        canvas?: ElementRef;
        public ngAfterViewInit(): void {
            this.initialize();
            this.getCanvasElement();
        }
        public initialize(): void {
            this.puzzleManager.initialize();
        }
        public getCanvasElement(): HTMLElement | null | undefined {
            return document.getElementById("puzzleBoardWrapper");
        }
    }
}
